generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id        String    @id @default(cuid())
  name      String    @db.VarChar(128)
  username  String    @unique @db.VarChar(32)
  email     String    @unique @db.VarChar(255)
  password  String    @db.VarChar(255)
  role      String    @default("default")
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  hunches   Hunch[]
}

model Team {
  id          Int       @id @default(autoincrement())
  name        String    @unique @db.VarChar(32)
  abbr        String    @unique @db.VarChar(3)
  logo        String    @db.VarChar(255)
  homeMatches Match[]   @relation(name: "homeTeamTeamId")
  awayMatches Match[]   @relation(name: "awayTeamTeamId")
}

model Match {
  id            Int       @id @default(autoincrement())
  homeTeam      Team?     @relation(fields: [homeTeamId], references: [id], name: "homeTeamTeamId")
  homeTeamId    Int?
  awayTeam      Team?     @relation(fields: [awayTeamId], references: [id], name: "awayTeamTeamId")
  awayTeamId    Int?
  homeTeamScore Int?      @db.TinyInt
  awayTeamScore Int?      @db.TinyInt
  datetime      DateTime
  stage         String    @db.VarChar(32)
  hunches       Hunch[]

  @@index([homeTeamId, awayTeamId])
}

model Hunch {
  id            String    @id @default(cuid())
  user          User      @relation(fields: [userId], references: [id])
  userId        String
  match         Match     @relation(fields: [matchId], references: [id])
  matchId       Int
  homeTeamScore Int       @db.TinyInt
  awayTeamScore Int       @db.TinyInt
  won           Boolean?
  
  @@index([userId, matchId])
}
